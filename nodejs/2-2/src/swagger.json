{
  "openapi": "3.0.0",
  "info": {
    "title": "Users Manager",
    "description": "This is a users management API.",
    "version": "1.0.0"
  },
  "paths": {
    "/users": {
      "post": {
        "tags": ["User"],
        "summary": "Create user",
        "requestBody": {
          "description": "New user's information.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "required": true
                  },
                  "email": {
                    "type": "string",
                    "required": true
                  }
                },
                "example": {
                  "name": "John Doe",
                  "email": "john.doe@email.com"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                },
                "example": {
                  "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                  "name": "John Doe",
                  "admin": false,
                  "email": "john.doe@email.com",
                  "created_at": "2021-09-22T21:08:09.277Z",
                  "updated_at": "2021-09-22T21:08:09.277Z"
                }
              }
            }
          },
          "400": {
            "description": "Bad request. User already exists.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "error": "Email already in use."
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["User"],
        "summary": "Get all users",
        "description": "Only admin users can get the list of all users.",
        "parameters": [
          {
            "description": "Requesting user's ID.",
            "in": "header",
            "name": "user_id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                },
                "example": [
                  {
                    "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "name": "John Doe",
                    "admin": false,
                    "email": "john.doe@email.com",
                    "created_at": "2021-09-22T21:08:09.277Z",
                    "updated_at": "2021-09-22T21:08:09.277Z"
                  },
                  {
                    "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                    "name": "John Doe",
                    "admin": true,
                    "email": "john.doe@email.com",
                    "created_at": "2021-09-22T21:08:09.277Z",
                    "updated_at": "2021-09-22T21:08:09.277Z"
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Bad request. Requesting user does not meet requirements.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Requesting user not found": {
                    "value": {
                      "error": "Requesting user not found."
                    }
                  },
                  "Requesting user is not admin": {
                    "value": {
                      "error": "Requesting user must be an admin."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{user_id}/admin": {
      "patch": {
        "tags": ["User"],
        "summary": "Turn user into admin",
        "parameters": [
          {
            "description": "ID of the user to turn into admin.",
            "in": "path",
            "name": "user_id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                },
                "example": {
                  "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                  "name": "John Doe",
                  "admin": true,
                  "email": "john.doe@email.com",
                  "created_at": "2021-09-22T21:08:09.277Z",
                  "updated_at": "2021-09-22T21:08:09.277Z"
                }
              }
            }
          },
          "404": {
            "description": "User not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "error": "User not found."
                }
              }
            }
          }
        }
      }
    },
    "/users/{user_id}": {
      "get": {
        "tags": ["User"],
        "summary": "Get user",
        "parameters": [
          {
            "description": "ID of the user to get.",
            "in": "path",
            "name": "user_id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                },
                "example": {
                  "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                  "name": "John Doe",
                  "admin": true,
                  "email": "john.doe@email.com",
                  "created_at": "2021-09-22T21:08:09.277Z",
                  "updated_at": "2021-09-22T21:08:09.277Z"
                }
              }
            }
          },
          "404": {
            "description": "User not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "error": "User not found."
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "admin": {
            "type": "boolean"
          },
          "email": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string"
          }
        }
      }
    }
  }
}
